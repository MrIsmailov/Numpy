# -*- coding: utf-8 -*-
"""Copy of mohirdev_NumPy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KWHAX6SfIS9COtuu4bZrIpT2RnP0V9cI

# NumPy kutubxonasiga doir bilimlaringizni mustaxkamlash uchun mashqlar

Hurmatli o'quvchi, bilimingizni yanada mustaxkamlashingiz va chuqurroq ko'nikmalarga ega bo'lishingiz uchun sizga topshiriqlar tayyorladik. Sizga yengillik yaratish maqsadida topshiriqni aynan qanday funksiyalar yordamida amalga oshirishingiz mumkin ekanini
 `ðŸ’¡Ishora` ko'rinishida yozdik!

#### 1. NumPy kutubxonasini `np` nomi ostida yuklang va numpy kutubxonasini chop eting.

versiya va konfiguratsiyani tekshiring.

`ðŸ’¡Ishora` import â€¦ as` and `np.__version__, np.show_config
"""

import numpy as np

"""#### 2. Raqamli qiymatlar ro'yxatini bir o'lchovli NumPy massiviga aylantiring!

`ðŸ’¡Ishora` numpy.array
"""

# prompt: arr = np.array([1, 1, 2])

arr = np.array([1, 1, 2])
arr

"""#### 3. Qiymatlari noldan iborat bo'lgan to'qqiz o'lchovli massiv yarating.

`ðŸ’¡Ishora` np.zeros

#### 4. Massiv yarating va uning xotira hajmini toping.

`ðŸ’¡Ishora` size, itemsize
"""

arr1 = np.array([1,3,4,5])
arr1.size

"""#### 5. NumPy kutubxonasidagi add funksiyasi hujjatlarini buyruq satridan qanday olishi mumkin?

`ðŸ’¡Ishora` np.info
"""

arr = np.array([2,3,5,6,7])
np.info(arr)

"""#### 6. Shunday vekor yaratingki u o'n ikki o'lchamda va qiymatlari noldan iborat bo'lsin, lekin vektorning oltinchi qiymati 1 ga teng bo'lsin.

`ðŸ’¡Ishora` array[12]
"""

arr = np.zeros(12, dtype = int)

arr





"""#### 7. Qiymatlari 20 dan 59 gacha bo'lgan vektor yarating.

`ðŸ’¡Ishora` arange
"""

arr = np.arange(20, 59, 1)
arr

"""#### 8. Vektor yarating va uni teskari o'zgartiring
(birinchi element oxirgisi bo'lsin)

`ðŸ’¡Ishora` array[::-1]
"""

ini_array = np.array([1, 2, 3, 6, 4, 5])
res = np.flip(ini_array)
ini_array

"""#### 9. 12 dan 20 gacha bo'lgan qiymatlarga ega 3x3 matritsa yarating.

`ðŸ’¡Ishora` reshape
"""

import numpy as np
arr = np.arange(12, 21, 1)
arr.reshape(3,3)
arr

"""#### 10. Quyidagi matritsadan foydalanib nolga teng bo'lmagan elementlarning indekslarini toping.
[3, 7, 0, 0, 9, 0]

`ðŸ’¡Ishora` np.nonzero
"""

import numpy as np
arr = np.array([3,7,0,0,9,0])
np.nonzero(arr)

"""#### 11. Tasodifiy qiymatlar bilan 2x2x2 o'lchovidagi massiv yarating.

`ðŸ’¡Ishora` np.random.random
"""

import numpy as np
arr = np.random.random(2)

"""#### 12. Tasodifiy sonlardan tashkil topgan 9X9 o'lchamidagi massiv yarating. So'ng uning eng katta va eng kichik qiymatlarini toping

`ðŸ’¡Ishora` min, max
"""

import numpy as np
arr = np.random.randn(9,9)
np.min(arr)
np.max(arr)

"""#### 13. Quyidagi misol qanday natija beradi?


```python
0 * np.nan
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
np.nan in set([np.nan])
0.7 == 7 * 0.1
```

`ðŸ’¡Ishora` NaN = not a number, inf = infinity
"""

0 * np.nan
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
np.nan in set([np.nan])
0.7 == 7 * 0.1

"""#### 14. O'lchamlari 6x3 va 3x4 bo'lgan martitsa yarating, so'ng ularning  ko'paytmasini hisoblang.

`ðŸ’¡Ishora` np.dot` or `np.ones
"""

import numpy as np
arr1 = np.random.randn(6,3)
arr2 = np.random.rand(3,4)
np.dot(arr1,arr2)

"""#### 15. Quyidagi misol qanday natija beradi?

```python
print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))
```
"""

print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))

"""#### 16. NumPy kutubxonasi yordamida ikkita massivni solishtiring va ular usida quyidagi amallarni bajaring.

```python
Array a: [1 2]
Array b: [4 5]
a > b
[False False]
a >= b
[False False]
a < b
[ True True]
a <= b
[ True True]
```
"""

import numpy as np

# Define the arrays
a = np.array([1, 2])
b = np.array([4, 5])

# Comparisons
greater_than = a > b  # Element-wise comparison: a > b
greater_than_or_equal_to = a >= b  # Element-wise comparison: a >= b
less_than = a < b  # Element-wise comparison: a < b
less_than_or_equal_to = a <= b  # Element-wise comparison: a <= b

# Print the results
print("a > b:", greater_than)
print("a >= b:", greater_than_or_equal_to)
print("a < b:", less_than)
print("a <= b:", less_than_or_equal_to)

"""#### 17. Quyidagi misol qanday natija beradi?

```python
np.array(0) / np.array(0)
np.array(0) // np.array(0)
np.array([np.nan]).astype(int).astype(float)
```
"""

np.array(0) / np.array(0)
np.array(0) // np.array(0)
np.array([np.nan]).astype(int).astype(float)

"""#### 18. Ikkita massiv yarating va ular orasidagi umumiy qiymatlarni toping

`ðŸ’¡Ishora` np.intersect1d
"""

import numpy as np
arr1 = np.random.rand(2,3)
arr2 = np.random.rand(2,3)
np.intersect1d(arr1, arr2)

"""#### 19. Tasodifiy sonlardan iborat bo'lgan massiv yarating, so'ng ularni quyida berilgan 4 xil usul yordamida musbat sonlarning butun qismini ajratib oling.

`ðŸ’¡Ishora` %, np.floor, astype, np.trunc
"""

import numpy as np
arr = np.random.rand()
np.trunc(arr)

"""#### 20. O'lchovlari 3x3 matritsa yarating, ularning qator qiymatlari 0 dan 2 gacha bo'lsin.

`ðŸ’¡Ishora` np.arange
"""

import numpy as np
arr = np.arange(0,2)
arr

"""#### 21. O'chamlari 10 bo'lgan tasodifiy vektor yarating va uni o'sish tartibida chiqaruvchi dastur tuzing.

`ðŸ’¡Ishora` sort
"""

import numpy as np
arr = np.random.random(10)
np.sort(arr)

"""#### 22. Ikki tasodifiy A va B massiv yarating, ularning tengligini tekshiring

`ðŸ’¡Ishora` np.allclose, np.array_equal
"""

import numpy as np
arr1 = np.random.randn()
arr2 = np.random.randn()
np.allclose(arr1, arr2)

"""#### 23. O'lchamlari 6x3 va 3x4 matritsa tuzing va ularni o'zaro ko'paytiring.

`ðŸ’¡Ishora` np.dot or np.ones
"""

import numpy as np
arr1 = np.random.randn(6,3)
arr2 = np.random.randn(3,4)
result = np.dot(arr1, arr2)
print(result)

"""#### 24. Tasodifiy sonlardan iborat bo'lgan o'lchami 5 ga teng vektor yarating, so'ng uning eng katta qiymatini 0 ga o'zgartiring.

`ðŸ’¡Ishora` argmax
"""

import numpy as np
arr = np.random.randn(5)
np.argmax(arr)

"""#### 25. NumPy kutubxonasi yordamida kecha, bugun va ertangi kun sanalarini aniqlang.

`ðŸ’¡Ishora` np.datetime64, np.timedelta64
"""



import numpy as np
np.datetime64

"""#### 26. 2016 yil yanvar oyiga to'g'ri keladigan barcha sanalarni NumPy kutubxonasi yordamida aniqlang.

`ðŸ’¡Ishora` np.arange(dtype=datetime64['D'])
"""

import numpy as np

# Create a range of numbers (e.g., 0 to 9)
num_days = 10
date_range = np.arange(num_days, dtype='int')

# Convert the numeric range to datetime64 with unit 'D'
date_range = date_range.astype('datetime64[D]')

print(date_range)

"""#### 27. 4 xil usul yordamida musbat sonlarning tasodifiy massivining butun son qismini ajratib oling.

`ðŸ’¡Ishora` %, np.floor, astype, np.trunc`
"""

import numpy as np
arr = np.random.rand()
np.trunc(arr)

"""#### 28. Ixtiyoriy kichik massivlar yarating, ular yeg'indisini np.sum funksiyasidanda tezroq hisoblovchi dastur tuzing.

`ðŸ’¡Ishora` np.add.reduce
"""

import numpy as np
arr = np.random.randn()
np.add.reduce(arr)

"""#### 29. [1, 2, 3, 4, 5] vektor berilgan, har bir qiymat orasiga ketma-ket 3 ta nol raqamini yozuvchi dastur tuzing.

`ðŸ’¡Ishora` array[::4]
"""

import numpy as np
arr = np.array([1,2,3,4,5])
arr[::4]

"""#### 30. Quyidagi a massiv berilgan, a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14] undan foydalangan holda siz quyidagi b massivni yarata olasizmi, b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], ..., [11,12,13,14]]?

`ðŸ’¡Ishora` stride_tricks.as_strided
"""

import numpy as np

arr1 = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
np.lib.stride_tricks.as_strided
view = np.lib.stride_tricks.as_strided(arr1, shape=(7, 2), strides=(16, 8))
print(view)

"""#### 31. Ixtiyoriy sonlardan tashkil topgan massiv yarating, unga o'xshash qiymatlar kiriting. So'ng, o'xshash qiymatlarni topuvchi dastur tuzing.

`ðŸ’¡Ishora` np.bincount, argmax
"""

import numpy as np
arr = np.random.randint(0,10,size=10)
arr1 = np.array([1,2,3])
np.in1d(arr,arr1)

"""#### BONUS!

`ðŸ’¡O'zingiz javob berishni istagan savolni kiriting va unga javob bering!`
"""

import numpy as np
arr = np.random.uniform(0,10,size=0)
arr